---
- name: Install required package
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - "xfsprogs"

- name: Creating XFS on segment devices
  community.general.filesystem:
    fstype: xfs
    dev: "{{ item[1] }}"
  when: segment_mkfs and segment_force_mount
  loop: "{{ segment_datadisks }}"

- name: Creating directories on segment devices
  ansible.builtin.file:
    path: "{{ item[0] }}"
    state: directory
    mode: "0755"
    owner: "{{ cluster_admin_user }}"
    group: "{{ cluster_admin_user }}"
  loop: "{{ segment_datadisks }}"

- name: Mounting data volumes on segments RH8
  ansible.posix.mount:
    path: "{{ item[0] }}"
    src: "{{ item[1] }}"
    fstype: xfs
    opts: "rw,nodev,noatime,inode64"
    state: mounted
  when: segment_force_mount and not
        (ansible_distribution == "CentOS" and ansible_distribution_major_version == "7")
  loop: "{{ segment_datadisks }}"

- name: Mounting data volumes on segments not RH8
  ansible.posix.mount:
    path: "{{ item[0] }}"
    src: "{{ item[1] }}"
    fstype: xfs
    opts: "rw,nodev,noatime,nobarrier,inode64"
    state: mounted
  when: segment_force_mount and
        (ansible_distribution == "CentOS" and ansible_distribution_major_version == "7")
  loop: "{{ segment_datadisks }}"

- name: Creating segments primary directory in datadir
  ansible.builtin.file:
    path: "{{ item[0] }}/{{ primary_directory }}"
    state: directory
    mode: "0755"
    owner: "{{ cluster_admin_user }}"
    group: "{{ cluster_admin_user }}"
  loop: "{{ segment_datadisks }}"

- name: Creating segments mirrors directory in datadir
  ansible.builtin.file:
    path: "{{ item[0] }}/{{ mirror_directory }}"
    state: directory
    mode: "0755"
    owner: "{{ cluster_admin_user }}"
    group: "{{ cluster_admin_user }}"
  when: mirror
  loop: "{{ segment_datadisks }}"

- name: Create directory for setprm.sh
  ansible.builtin.file:
    path: /opt/setprm
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Create setprm.sh
  ansible.builtin.template:
    src: setprm.sh.j2
    dest: /opt/setprm/setprm.sh
    backup: true
    mode: "0744"
    owner: root
    group: root

- name: Create setprm.service
  ansible.builtin.template:
    src: setprm.service.j2
    dest: /etc/systemd/system/setprm.service
    backup: true
    mode: "0644"
    owner: root
    group: root

- name: Start setprm.service
  ansible.builtin.systemd:
    name: setprm
    state: started
    daemon_reload: true
    enabled: true
...
